window.MY={},function(){let e={isEmail:function(e){return/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(e)},isNumber:function(e){return/^\d+$/.test(e)},isNotEmpty:function(e){return Boolean(e)}};MY.validation=e}(),function(){let t={},e=document.querySelector(".form-container"),n=null;function o(){t.close(),n.removeEventListener("click",o),document.removeEventListener("keydown",logKey)}t.open=function(){e.classList.remove("is-hidden"),n=document.querySelector(".form__close-button"),n.addEventListener("click",o),document.addEventListener("keydown",logKey)},t.close=function(){e.classList.add("is-hidden")},t.isValid=function(){var e=document.querySelectorAll('[data-valid="required"]'),n=document.querySelector("[data-email]").value,o=document.querySelector("[data-number]").value;return t.isAllCompleted(e)?MY.validation.isEmail(n)?MY.validation.isNumber(o)?void 0:(console.log("Invalid number"),!1):(console.log("Invalid email"),!1):(console.log("FIll in all fields, plz"),!1)},t.isAllCompleted=function(n){let o=!0;for(let e=0;e<n.length;e++)if(!MY.validation.isNotEmpty(n[e].value)){o=!1;break}return o},logKey=function(e){27==e.keyCode&&o()},MY.form=t}(),function(){let e=document.querySelector(".arrow-down"),n=document.querySelector(".form");document.querySelector(".nav");e&&e.addEventListener("click",function(e){e.preventDefault(),MY.form.open()}),n&&n.addEventListener("submit",function(e){e.preventDefault(),MY.form.isValid()?console.log("All good"):console.log("Is not valid")})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluaXQuanMiLCJ2YWxpZGF0aW9uLmpzIiwiZm9ybS5qcyIsIm1haW4uanMiXSwibmFtZXMiOlsid2luZG93IiwiTVkiLCJtZSIsImlzRW1haWwiLCJlbWFpbCIsInRlc3QiLCJpc051bWJlciIsIm51bWJlciIsImlzTm90RW1wdHkiLCJzdHIiLCJCb29sZWFuIiwidmFsaWRhdGlvbiIsImZvcm0iLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJjbG9zZUJ1dHRvbiIsIm9uQ2xvc2UiLCJjbG9zZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJsb2dLZXkiLCJvcGVuIiwiY2xhc3NMaXN0IiwicmVtb3ZlIiwiYWRkRXZlbnRMaXN0ZW5lciIsImFkZCIsImlzVmFsaWQiLCJyZXF1aXJlZEZpZWxkcyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJlbWFpbFZhbHVlIiwidmFsdWUiLCJudW1iZXJWYWx1ZSIsImlzQWxsQ29tcGxldGVkIiwiY29uc29sZSIsImxvZyIsImRhdGEiLCJyZXN1bHQiLCJpIiwibGVuZ3RoIiwiZSIsImtleUNvZGUiLCJvcGVuRm9ybUJ1dHRvbiIsInByZXZlbnREZWZhdWx0Il0sIm1hcHBpbmdzIjoiQUFBQUEsT0FBQUMsR0FBQSxHQ0FBLFdBQ0EsSUFBQUMsRUFBQSxDQUVBQyxRQUFBLFNBQUFDLEdBRUEsTUFEQSwwSkFDQUMsS0FBQUQsSUFHQUUsU0FBQSxTQUFBQyxHQUVBLE1BREEsUUFDQUYsS0FBQUUsSUFHQUMsV0FBQSxTQUFBQyxHQUNBLE9BQUFDLFFBQUFELEtBR0FSLEdBQUFVLFdBQUFULEVBakJBLEdDQUEsV0FDQSxJQUFBQSxFQUFBLEdBQ0FVLEVBQUFDLFNBQUFDLGNBQUEsbUJBQ0FDLEVBQUEsS0FFQSxTQUFBQyxJQUNBZCxFQUFBZSxRQUNBRixFQUFBRyxvQkFBQSxRQUFBRixHQUNBSCxTQUFBSyxvQkFBQSxVQUFBQyxRQUdBakIsRUFBQWtCLEtBQUEsV0FDQVIsRUFBQVMsVUFBQUMsT0FBQSxhQUNBUCxFQUFBRixTQUFBQyxjQUFBLHVCQUNBQyxFQUFBUSxpQkFBQSxRQUFBUCxHQUVBSCxTQUFBVSxpQkFBQSxVQUFBSixTQUdBakIsRUFBQWUsTUFBQSxXQUNBTCxFQUFBUyxVQUFBRyxJQUFBLGNBR0F0QixFQUFBdUIsUUFBQSxXQUNBLElBQUFDLEVBQUFiLFNBQUFjLGlCQUFBLDJCQUNBQyxFQUFBZixTQUFBQyxjQUFBLGdCQUFBZSxNQUNBQyxFQUFBakIsU0FBQUMsY0FBQSxpQkFBQWUsTUFFQSxPQUFBM0IsRUFBQTZCLGVBQUFMLEdBR0F6QixHQUFBVSxXQUFBUixRQUFBeUIsR0FHQTNCLEdBQUFVLFdBQUFMLFNBQUF3QixRQUFBLEdBQ0FFLFFBQUFDLElBQUEsbUJBQ0EsSUFKQUQsUUFBQUMsSUFBQSxrQkFDQSxJQUpBRCxRQUFBQyxJQUFBLDRCQUNBLElBVUEvQixFQUFBNkIsZUFBQSxTQUFBRyxHQUNBLElBQUFDLEdBQUEsRUFDQSxJQUFBLElBQUFDLEVBQUEsRUFBQUEsRUFBQUYsRUFBQUcsT0FBQUQsSUFDQSxJQUFBbkMsR0FBQVUsV0FBQUgsV0FBQTBCLEVBQUFFLEdBQUFQLE9BQUEsQ0FDQU0sR0FBQSxFQUNBLE1BR0EsT0FBQUEsR0FHQWhCLE9BQUEsU0FBQW1CLEdBQ0EsSUFBQUEsRUFBQUMsU0FDQXZCLEtBSUFmLEdBQUFXLEtBQUFWLEVBekRBLEdDQUEsV0FFQSxJQUFBc0MsRUFBQTNCLFNBQUFDLGNBQUEsZUFDQUYsRUFBQUMsU0FBQUMsY0FBQSxTQUNBRCxTQUFBQyxjQUFBLFFBRUEwQixHQUNBQSxFQUFBakIsaUJBQUEsUUFBQSxTQUFBZSxHQUNBQSxFQUFBRyxpQkFDQXhDLEdBQUFXLEtBQUFRLFNBSUFSLEdBQ0FBLEVBQUFXLGlCQUFBLFNBQUEsU0FBQWUsR0FDQUEsRUFBQUcsaUJBQ0F4QyxHQUFBVyxLQUFBYSxVQUNBTyxRQUFBQyxJQUFBLFlBRUFELFFBQUFDLElBQUEsa0JBbkJBIiwiZmlsZSI6Im1haW4ubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsid2luZG93Lk1ZID0ge307XHJcbiIsIihmdW5jdGlvbiAoKSB7XHJcbiAgICBsZXQgbWUgPSB7fTtcclxuXHJcbiAgICBtZS5pc0VtYWlsID0gZnVuY3Rpb24gaXNFbWFpbChlbWFpbCkge1xyXG4gICAgICAgIGxldCByZSA9IC9eKChbXjw+KClcXFtcXF1cXFxcLiw7Olxcc0BcIl0rKFxcLltePD4oKVxcW1xcXVxcXFwuLDs6XFxzQFwiXSspKil8KFwiLitcIikpQCgoXFxbWzAtOV17MSwzfVxcLlswLTldezEsM31cXC5bMC05XXsxLDN9XFwuWzAtOV17MSwzfVxcXSl8KChbYS16QS1aXFwtMC05XStcXC4pK1thLXpBLVpdezIsfSkpJC87XHJcbiAgICAgICAgcmV0dXJuIHJlLnRlc3QoZW1haWwpO1xyXG4gICAgfTtcclxuXHJcbiAgICBtZS5pc051bWJlciA9IGZ1bmN0aW9uKG51bWJlcikge1xyXG4gICAgICAgIGxldCByZSA9IC9eXFxkKyQvO1xyXG4gICAgICAgIHJldHVybiByZS50ZXN0KG51bWJlcik7XHJcbiAgICB9O1xyXG5cclxuICAgIG1lLmlzTm90RW1wdHkgPSBmdW5jdGlvbihzdHIpIHtcclxuICAgICAgICByZXR1cm4gQm9vbGVhbihzdHIpO1xyXG4gICAgfTtcclxuXHJcbiAgICBNWS52YWxpZGF0aW9uID0gbWU7XHJcbn0oKSk7XHJcblxyXG5cclxuIiwiKGZ1bmN0aW9uKCkge1xyXG4gICAgbGV0IG1lID0ge307XHJcbiAgICBsZXQgZm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5mb3JtLWNvbnRhaW5lcicpO1xyXG4gICAgbGV0IGNsb3NlQnV0dG9uID0gbnVsbDtcclxuXHJcbiAgICBmdW5jdGlvbiBvbkNsb3NlKCkgeyAgICAgICAvL9C/0YDQuCDQutC70LjQutC1INC90LAg0LrRgNC10YHRgtC40Log0L3QsNCy0LXRiNC40LLQsNC10YIg0YTRg9C90LrRhtC40Y4g0LTQvtCx0LDQstC70LXQvdC40Y8g0LrQu9Cw0YHRgdCwIGlzLWhpZGRlbiAgXHJcbiAgICAgICAgbWUuY2xvc2UoKTtcclxuICAgICAgICBjbG9zZUJ1dHRvbi5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIG9uQ2xvc2UpXHJcbiAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGxvZ0tleSk7XHJcbiAgICB9XHJcblxyXG4gICAgbWUub3BlbiA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIGZvcm0uY2xhc3NMaXN0LnJlbW92ZSgnaXMtaGlkZGVuJyk7ICAgICAvL9GD0LHQuNGA0LDQtdGCIHNjc3Mg0LrQu9Cw0YHRgSBpcy1oaWRkZW5cclxuICAgICAgICBjbG9zZUJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5mb3JtX19jbG9zZS1idXR0b24nKTtcclxuICAgICAgICBjbG9zZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIG9uQ2xvc2UpICAgICAgLy/QtNC+0LHQsNCy0LvRj9C10YIg0L7QsdGA0LDQsdC+0YLRh9C40Log0L3QsCDQutGA0LXRgdGC0LjQulxyXG5cclxuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgbG9nS2V5KTtcclxuICAgIH07XHJcblxyXG4gICAgbWUuY2xvc2UgPSBmdW5jdGlvbigpIHtcclxuICAgICAgICBmb3JtLmNsYXNzTGlzdC5hZGQoJ2lzLWhpZGRlbicpO1xyXG4gICAgfTtcclxuXHJcbiAgICBtZS5pc1ZhbGlkID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgbGV0IHJlcXVpcmVkRmllbGRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtdmFsaWQ9XCJyZXF1aXJlZFwiXScpO1xyXG4gICAgICAgIGxldCBlbWFpbFZhbHVlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtZW1haWxdJykudmFsdWU7XHJcbiAgICAgICAgbGV0IG51bWJlclZhbHVlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtbnVtYmVyXScpLnZhbHVlO1xyXG5cclxuICAgICAgICBpZiAoIW1lLmlzQWxsQ29tcGxldGVkKHJlcXVpcmVkRmllbGRzKSkge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnRklsbCBpbiBhbGwgZmllbGRzLCBwbHonKTtcclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH0gZWxzZSBpZiAoIU1ZLnZhbGlkYXRpb24uaXNFbWFpbChlbWFpbFZhbHVlKSkge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnSW52YWxpZCBlbWFpbCcpO1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfSBlbHNlIGlmICghTVkudmFsaWRhdGlvbi5pc051bWJlcihudW1iZXJWYWx1ZSkpIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ0ludmFsaWQgbnVtYmVyJyk7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgbWUuaXNBbGxDb21wbGV0ZWQgPSBmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICBsZXQgcmVzdWx0ID0gdHJ1ZTtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGRhdGEubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgaWYgKCFNWS52YWxpZGF0aW9uLmlzTm90RW1wdHkoZGF0YVtpXS52YWx1ZSkpIHtcclxuICAgICAgICAgICAgICAgIHJlc3VsdCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgYnJlYWtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgfVxyXG5cclxuICAgIGxvZ0tleSA9IGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgaWYgKGUua2V5Q29kZSA9PSAyNykge1xyXG4gICAgICAgICAgICBvbkNsb3NlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIE1ZLmZvcm0gPSBtZTtcclxufSgpKTsiLCIoZnVuY3Rpb24oKSB7XHJcblxyXG4gICAgbGV0IG9wZW5Gb3JtQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFycm93LWRvd24nKTtcclxuICAgIGxldCBmb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmZvcm0nKTtcclxuICAgIGxldCBuYXYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubmF2Jyk7XHJcblxyXG4gICAgaWYgKG9wZW5Gb3JtQnV0dG9uKSB7XHJcbiAgICAgICAgb3BlbkZvcm1CdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbihlKSB7XHJcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTsgLy/QtNC10LnRgdGC0LLQuNC1INC/0L4g0YPQvNC+0LvRh9Cw0L3QuNGOICjQsiDQtNCw0L3QvdC+0Lwg0YHQu9GD0YfQsNC1INC/0LXRgNC10YXQvtC0INC90LrQsCDRgdGC0YDQsNC90LjRhtGDICMpINCyINGB0LvRg9GH0LDQtSDQtdGB0LvQuCDRhNC+0YDQvNCwINC90LUg0YHRgNCw0LHQvtGC0LDQtdGCXHJcbiAgICAgICAgICAgIE1ZLmZvcm0ub3BlbigpO1xyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gICAgaWYgKGZvcm0pIHtcclxuICAgICAgICBmb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIGZ1bmN0aW9uKGUpIHtcclxuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICBpZiAoTVkuZm9ybS5pc1ZhbGlkKCkpIHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdBbGwgZ29vZCcpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ0lzIG5vdCB2YWxpZCcpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgIH1cclxufSgpKTsiXX0=
